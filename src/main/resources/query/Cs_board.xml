<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dotori.client.cs_board.dao.Cs_BoardDao">

	<!-- <select id="boardList" resultType="com.spring.client.board.vo.BoardVO" 
		parameterType="com.spring.client.board.vo.BoardVO"> SELECT b_num, b_name, 
		b_title, to_char(b_date,'YYYY-MM-DD') as b_date, (SELECT COUNT(r_NUM) FROM 
		spring_reply WHERE b_NUM = B.b_NUM) AS r_cnt FROM spring_board b <if test="search=='b_title'"> 
		where b_title like '%'|| #{keyword} ||'%' </if> <if test="search == 'b_content'"> 
		where b_content like '%'|| #{keyword} ||'%' </if> <if test="search == 'b_name'"> 
		where b_name like '%'|| #{keyword} ||'%' </if> ORDER BY b_num desc </select> -->
		
		
	<!-- 검색 조건이 사용되었을때 사용 -->
	<sql id="cs_boardSearch">
		<if test="search=='all'">
				<![CDATA[
					(cs_title like '%'|| #{keyword} ||'%') or (t_editor like '%'|| #{keyword} ||'%') or (cs_name like '%'|| #{keyword} ||'%')
				]]>
		</if>
		<if test="search=='cs_title'">
				<![CDATA[
					cs_title like '%'|| #{keyword} ||'%'
				]]>
		</if>
		<if test="search == 'editor'">
				<![CDATA[
					t_editor like '%'|| #{keyword} ||'%'
				]]>
		</if>
		<if test="search == 'cs_name'">
				<![CDATA[
					cs_name like '%'|| #{keyword} ||'%'
				]]>
		</if>
	</sql>

	<select id="cs_boardList" resultType="board" parameterType="board">
			<!-- 			
			,(SELECT COUNT(cs_r_num) FROM cs_reply WHERE cs_num = boardlist.cs_num) as cs_r_cnt 
 			-->		
		<![CDATA[
		SELECT 
			cs_num,cs_name,cs_title,to_char(cs_regDate,'YYYY-MM-DD') as cs_regDate,cs_hits,editor,t_editor 
 			FROM ( 
			SELECT /*+INDEX_DESC(cs_board cs_board_pk)*/
				rownum as rnum, cs_num, cs_name, cs_title, cs_regDate,cs_hits,editor,t_editor 
			FROM cs_board 
			WHERE 
		]]>
<!-- 		
			안에 조건이 만족되면 (b_title like '%'|| #{keyword}||'%') and 가 추가된다. trim 
			= 안에 if가 만족되면 앞부분과 뒷부분을 붙혀준다. prefix = 앞에 추가되는 구분 suffix = 뒤에 추가되는 구분 prefixOverrides 
			= 조건이 만족되지 않았을때 AND까지의 내용을 지우도록 명명
 -->		
 		<trim prefix="(" suffix=") AND " prefixOverrides="AND">
			<include refid="cs_boardSearch"></include>
		</trim>

		<![CDATA[ 
			rownum <= #{pageNum} * #{amount}
			) boardlist
			WHERE rnum > (#{pageNum} - 1) * #{amount}
		]]>
	</select>
	

		<!--게시물 등록 1-->	
	<insert id="cs_boardInsert" parameterType="board">
		<![CDATA[
			Insert into cs_board(cs_num,cs_name,cs_title,editor,t_editor,cs_conf,member_id) 
			values(cs_board_seq.nextval,#{cs_name},#{cs_title},#{editor},#{t_editor},#{cs_conf},#{member_id})
		]]>
	</insert>



	<!--  게시물 등록 2 selectKey 앞에 먼저 수행되는 내용 즉 검색후 인설트 할수 있음 -->
	<insert id="" parameterType="board">
		/* board - boardInsert */
		<selectKey keyProperty="cs_num" resultType="int" order="BEFORE">
			select cs_board_seq.nextval from dual
		</selectKey>

		Insert into cs_board(cs_num,cs_name,cs_title,editor,t_editor,cs_conf,member_id)
		values(#{cs_num},#{cs_name},#{cs_title},#{editor},#{t_editor},#{cs_conf},${member_id})
	</insert>

	<select id="cs_boardDetail_currnum" resultType="int">
		select /*+INDEX_DESC(cs_board cs_board_pk)*/ cs_num from cs_board where rownum = 1	
	</select>

	<select id="cs_boardDetail" parameterType="int" resultType="board">
		<![CDATA[
			SELECT cs_num,cs_name,cs_title,editor,to_char(cs_regDate,'YYYY-MM-DD') as cs_regDate,
			to_char(cs_mDate,'YYYY-MM-DD') as cs_mDate,cs_hits 
			FROM cs_board 
			where cs_num = #{cs_num}
		]]>
	</select>

	<update id="cs_boardUpdate" parameterType="board">
		/* board - boardUpdate */
		UPDATE cs_board SET
		cs_title = #{cs_title}
		,editor = #{editor}
		,cs_mDate = sysdate
		WHERE 
		cs_num = #{cs_num}
	</update>

	<delete id="cs_boardDelete" parameterType="board">
		DELETE FROM cs_board
		WHERE
		cs_num = #{cs_num}
	</delete>


	<!-- 검색된 레코드의 갯수를 반환받는다.-->	
	<select id="cs_boardListCnt" parameterType="board" resultType="int">
		select count(*) from cs_board
		<trim prefix=" where (" suffix=")">
			<include refid="cs_boardSearch"></include>
		</trim>
	</select> 

</mapper>